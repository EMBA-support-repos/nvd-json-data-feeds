{
  "id": "CVE-2025-21788",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "published": "2025-02-27T03:15:19.663",
  "lastModified": "2025-02-27T03:15:19.663",
  "vulnStatus": "Received",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ethernet: ti: am65-cpsw: fix memleak in certain XDP cases\n\nIf the XDP program doesn't result in XDP_PASS then we leak the\nmemory allocated by am65_cpsw_build_skb().\n\nIt is pointless to allocate SKB memory before running the XDP\nprogram as we would be wasting CPU cycles for cases other than XDP_PASS.\nMove the SKB allocation after evaluating the XDP program result.\n\nThis fixes the memleak. A performance boost is seen for XDP_DROP test.\n\nXDP_DROP test:\nBefore: 460256 rx/s                  0 err/s\nAfter:  784130 rx/s                  0 err/s"
    },
    {
      "lang": "es",
      "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net: ethernet: ti: am65-cpsw: corrige la fuga de memoria en ciertos casos de XDP Si el programa XDP no da como resultado XDP_PASS, filtramos la memoria asignada por am65_cpsw_build_skb(). No tiene sentido asignar memoria SKB antes de ejecutar el programa XDP, ya que estar\u00edamos desperdiciando ciclos de CPU para casos distintos a XDP_PASS. Mueva la asignaci\u00f3n de SKB despu\u00e9s de evaluar el resultado del programa XDP. Esto corrige la fuga de memoria. Se observa una mejora en el rendimiento de la prueba XDP_DROP. Prueba XDP_DROP: Antes: 460256 rx/s 0 err/s Despu\u00e9s: 784130 rx/s 0 err/s"
    }
  ],
  "metrics": {},
  "references": [
    {
      "url": "https://git.kernel.org/stable/c/1bba1d042107167164a0ae3a843fdf650ab005d7",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/5db843258de1e4e6b1ef1cbd1797923c9e3de548",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/dc11f049612b9d926aca2e55f8dc9d82850d0da3",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    }
  ]
}