{
  "id": "CVE-2023-52978",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "published": "2025-03-27T17:15:44.923",
  "lastModified": "2025-03-28T18:11:49.747",
  "vulnStatus": "Awaiting Analysis",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nriscv: kprobe: Fixup kernel panic when probing an illegal position\n\nThe kernel would panic when probed for an illegal position. eg:\n\n(CONFIG_RISCV_ISA_C=n)\n\necho 'p:hello kernel_clone+0x16 a0=%a0' >> kprobe_events\necho 1 > events/kprobes/hello/enable\ncat trace\n\nKernel panic - not syncing: stack-protector: Kernel stack\nis corrupted in: __do_sys_newfstatat+0xb8/0xb8\nCPU: 0 PID: 111 Comm: sh Not tainted\n6.2.0-rc1-00027-g2d398fe49a4d #490\nHardware name: riscv-virtio,qemu (DT)\nCall Trace:\n[<ffffffff80007268>] dump_backtrace+0x38/0x48\n[<ffffffff80c5e83c>] show_stack+0x50/0x68\n[<ffffffff80c6da28>] dump_stack_lvl+0x60/0x84\n[<ffffffff80c6da6c>] dump_stack+0x20/0x30\n[<ffffffff80c5ecf4>] panic+0x160/0x374\n[<ffffffff80c6db94>] generic_handle_arch_irq+0x0/0xa8\n[<ffffffff802deeb0>] sys_newstat+0x0/0x30\n[<ffffffff800158c0>] sys_clone+0x20/0x30\n[<ffffffff800039e8>] ret_from_syscall+0x0/0x4\n---[ end Kernel panic - not syncing: stack-protector:\nKernel stack is corrupted in: __do_sys_newfstatat+0xb8/0xb8 ]---\n\nThat is because the kprobe's ebreak instruction broke the kernel's\noriginal code. The user should guarantee the correction of the probe\nposition, but it couldn't make the kernel panic.\n\nThis patch adds arch_check_kprobe in arch_prepare_kprobe to prevent an\nillegal position (Such as the middle of an instruction)."
    },
    {
      "lang": "es",
      "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: riscv: kprobe: Correcci\u00f3n del p\u00e1nico del kernel al sondear una posici\u00f3n ilegal El kernel entrar\u00eda en p\u00e1nico cuando se sondeara una posici\u00f3n ilegal. p. ej.: (CONFIG_RISCV_ISA_C=n) echo 'p:hello kernel_clone+0x16 a0=%a0' &gt;&gt; kprobe_events echo 1 &gt; events/kprobes/hello/enable cat trace Kernel panic - not syncing: stack-protector: Kernel stack is corrupted in: __do_sys_newfstatat+0xb8/0xb8 CPU: 0 PID: 111 Comm: sh Not tainted 6.2.0-rc1-00027-g2d398fe49a4d #490 Hardware name: riscv-virtio,qemu (DT) Call Trace: [] dump_backtrace+0x38/0x48 [] show_stack+0x50/0x68 [] dump_stack_lvl+0x60/0x84 [] dump_stack+0x20/0x30 [] panic+0x160/0x374 [] generic_handle_arch_irq+0x0/0xa8 [] sys_newstat+0x0/0x30 [] sys_clone+0x20/0x30 [] ret_from_syscall+0x0/0x4 ---[ end Kernel panic - not syncing: stack-protector: Kernel stack is corrupted in: __do_sys_newfstatat+0xb8/0xb8 ]--- Esto se debe a que la instrucci\u00f3n ebreak de kprobe rompi\u00f3 el c\u00f3digo original del n\u00facleo. El usuario deber\u00eda garantizar la correcci\u00f3n de la posici\u00f3n de la sonda, pero no pudo provocar un p\u00e1nico en el n\u00facleo. Este parche a\u00f1ade arch_check_kprobe en arch_prepare_kprobe para evitar una posici\u00f3n ilegal (como la mitad de una instrucci\u00f3n)."
    }
  ],
  "metrics": {},
  "references": [
    {
      "url": "https://git.kernel.org/stable/c/04a73558209554da17f46490ec4faaaf1b2bab68",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/12316538b1d193064109ce1a28fc9bacd43950de",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/87f48c7ccc73afc78630530d9af51f458f58cab8",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    }
  ]
}