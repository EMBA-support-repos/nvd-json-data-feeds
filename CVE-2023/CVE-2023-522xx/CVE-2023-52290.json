{
  "id": "CVE-2023-52290",
  "sourceIdentifier": "security@apache.org",
  "published": "2024-07-16T08:15:02.050",
  "lastModified": "2024-07-16T13:43:58.773",
  "vulnStatus": "Awaiting Analysis",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "In streampark-console the list pages(e.g: application pages), users can sort page by field. This sort field is sent from the front-end to the back-end, and the SQL query is generated using this field. However, because this sort field isn't validated, there is a risk of SQL injection vulnerability.\u00a0The attacker must successfully log into the system to launch an attack, which may cause data leakage. Since no data will be written, so this is a low-impact vulnerability.\n\nMitigation:\n\nall users should upgrade to 2.1.4,  Such parameters will be blocked.\n\n"
    },
    {
      "lang": "es",
      "value": "En streampark-console, las p\u00e1ginas de lista (por ejemplo, p\u00e1ginas de aplicaciones), los usuarios pueden ordenar las p\u00e1ginas por campo. Este campo de clasificaci\u00f3n se env\u00eda desde el front-end al back-end y la consulta SQL se genera utilizando este campo. Sin embargo, debido a que este campo de clasificaci\u00f3n no est\u00e1 validado, existe el riesgo de vulnerabilidad de inyecci\u00f3n SQL. El atacante debe iniciar sesi\u00f3n con \u00e9xito en el sistema para lanzar un ataque, lo que puede provocar una fuga de datos. Dado que no se escribir\u00e1n datos, esta es una vulnerabilidad de bajo impacto. Mitigaci\u00f3n: todos los usuarios deben actualizar a 2.1.4. Dichos par\u00e1metros se bloquear\u00e1n."
    }
  ],
  "metrics": {},
  "weaknesses": [
    {
      "source": "security@apache.org",
      "type": "Primary",
      "description": [
        {
          "lang": "en",
          "value": "CWE-89"
        }
      ]
    }
  ],
  "references": [
    {
      "url": "https://lists.apache.org/thread/t3mcm8pb65d9gj3wrgtj9sx9s2pfvvl3",
      "source": "security@apache.org"
    }
  ]
}