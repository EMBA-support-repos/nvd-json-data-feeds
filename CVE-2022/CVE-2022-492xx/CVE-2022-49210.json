{
  "id": "CVE-2022-49210",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "published": "2025-02-26T07:00:58.107",
  "lastModified": "2025-02-26T07:00:58.107",
  "vulnStatus": "Undergoing Analysis",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nMIPS: pgalloc: fix memory leak caused by pgd_free()\n\npgd page is freed by generic implementation pgd_free() since commit\nf9cb654cb550 (\"asm-generic: pgalloc: provide generic pgd_free()\"),\nhowever, there are scenarios that the system uses more than one page as\nthe pgd table, in such cases the generic implementation pgd_free() won't\nbe applicable anymore. For example, when PAGE_SIZE_4KB is enabled and\nMIPS_VA_BITS_48 is not enabled in a 64bit system, the macro \"PGD_ORDER\"\nwill be set as \"1\", which will cause allocating two pages as the pgd\ntable. Well, at the same time, the generic implementation pgd_free()\njust free one pgd page, which will result in the memory leak.\n\nThe memory leak can be easily detected by executing shell command:\n\"while true; do ls > /dev/null; grep MemFree /proc/meminfo; done\""
    },
    {
      "lang": "es",
      "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: MIPS: pgalloc: reparar p\u00e9rdida de memoria causada por pgd_free() La p\u00e1gina pgd es liberada por la implementaci\u00f3n gen\u00e9rica pgd_free() desde el commit f9cb654cb550 (\"asm-generic: pgalloc: proporcionar pgd_free() gen\u00e9rico\"), sin embargo, hay escenarios en los que el sistema usa m\u00e1s de una p\u00e1gina como la tabla pgd, en tales casos la implementaci\u00f3n gen\u00e9rica pgd_free() ya no ser\u00e1 aplicable. Por ejemplo, cuando PAGE_SIZE_4KB est\u00e1 habilitado y MIPS_VA_BITS_48 no est\u00e1 habilitado en un sistema de 64 bits, la macro \"PGD_ORDER\" se establecer\u00e1 como \"1\", lo que provocar\u00e1 la asignaci\u00f3n de dos p\u00e1ginas como la tabla pgd. Bueno, al mismo tiempo, la implementaci\u00f3n gen\u00e9rica pgd_free() solo libera una p\u00e1gina pgd, lo que provocar\u00e1 la p\u00e9rdida de memoria. La p\u00e9rdida de memoria se puede detectar f\u00e1cilmente ejecutando el comando de shell: \"while true; do ls &gt; /dev/null; grep MemFree /proc/meminfo; done\""
    }
  ],
  "metrics": {},
  "references": [
    {
      "url": "https://git.kernel.org/stable/c/1bf0d78c8cc3cf615a6e7bf33ada70b73592f0a1",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/2bc5bab9a763d520937e4f3fe8df51c6a1eceb97",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/5a8501d34b261906e4c76ec9da679f2cb4d309ed",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/d29cda15cab086d82d692de016f7249545d4b6b4",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/fa3d44424579972cc7c4fac3d9cf227798ebdfa0",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    }
  ]
}