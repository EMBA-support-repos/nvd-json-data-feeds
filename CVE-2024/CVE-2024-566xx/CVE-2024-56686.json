{
  "id": "CVE-2024-56686",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "published": "2024-12-28T10:15:11.827",
  "lastModified": "2024-12-28T10:15:11.827",
  "vulnStatus": "Awaiting Analysis",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix race in buffer_head read fault injection\n\nWhen I enabled ext4 debug for fault injection testing, I encountered the\nfollowing warning:\n\n  EXT4-fs error (device sda): ext4_read_inode_bitmap:201: comm fsstress:\n         Cannot read inode bitmap - block_group = 8, inode_bitmap = 1051\n  WARNING: CPU: 0 PID: 511 at fs/buffer.c:1181 mark_buffer_dirty+0x1b3/0x1d0\n\nThe root cause of the issue lies in the improper implementation of ext4's\nbuffer_head read fault injection. The actual completion of buffer_head\nread and the buffer_head fault injection are not atomic, which can lead\nto the uptodate flag being cleared on normally used buffer_heads in race\nconditions.\n\n[CPU0]           [CPU1]         [CPU2]\next4_read_inode_bitmap\n  ext4_read_bh()\n  <bh read complete>\n                 ext4_read_inode_bitmap\n                   if (buffer_uptodate(bh))\n                     return bh\n                               jbd2_journal_commit_transaction\n                                 __jbd2_journal_refile_buffer\n                                   __jbd2_journal_unfile_buffer\n                                     __jbd2_journal_temp_unlink_buffer\n  ext4_simulate_fail_bh()\n    clear_buffer_uptodate\n                                      mark_buffer_dirty\n                                        <report warning>\n                                        WARN_ON_ONCE(!buffer_uptodate(bh))\n\nThe best approach would be to perform fault injection in the IO completion\ncallback function, rather than after IO completion. However, the IO\ncompletion callback function cannot get the fault injection code in sb.\n\nFix it by passing the result of fault injection into the bh read function,\nwe simulate faults within the bh read function itself. This requires adding\nan extra parameter to the bh read functions that need fault injection."
    },
    {
      "lang": "es",
      "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ext4: correcci\u00f3n de ejecuci\u00f3n en la inyecci\u00f3n de error de lectura de buffer_head Cuando habilit\u00e9 la depuraci\u00f3n de ext4 para las pruebas de inyecci\u00f3n de errores, encontr\u00e9 la siguiente advertencia: Error de EXT4-fs (dispositivo sda): ext4_read_inode_bitmap:201: comm fsstress: No se puede leer el mapa de bits del inodo - block_group = 8, inode_bitmap = 1051 ADVERTENCIA: CPU: 0 PID: 511 en fs/buffer.c:1181 mark_buffer_dirty+0x1b3/0x1d0 La causa ra\u00edz del problema radica en la implementaci\u00f3n incorrecta de la inyecci\u00f3n de error de lectura de buffer_head de ext4. La finalizaci\u00f3n real de la lectura de buffer_head y la inyecci\u00f3n de error de buffer_head no son at\u00f3micas, lo que puede provocar que el indicador de actualizaci\u00f3n se borre en los buffer_heads utilizados normalmente en condiciones de ejecuci\u00f3n. [CPU0] [CPU1] [CPU2] ext4_read_inode_bitmap ext4_read_bh()  ext4_read_inode_bitmap if (buffer_uptodate(bh)) return bh jbd2_journal_commit_transaction __jbd2_journal_refile_buffer __jbd2_journal_unfile_buffer __jbd2_journal_temp_unlink_buffer ext4_simulate_fail_bh() clear_buffer_uptodate mark_buffer_dirty  WARN_ON_ONCE(!buffer_uptodate(bh)) El mejor enfoque ser\u00eda realizar la inyecci\u00f3n de fallas en la funci\u00f3n de devoluci\u00f3n de llamada de finalizaci\u00f3n de E/S, en lugar de despu\u00e9s de la finalizaci\u00f3n de E/S. Sin embargo, la funci\u00f3n de devoluci\u00f3n de llamada de finalizaci\u00f3n de E/S no puede obtener el c\u00f3digo de inyecci\u00f3n de fallas en sb. Para solucionarlo, pasamos el resultado de la inyecci\u00f3n de fallas a la funci\u00f3n de lectura de bh. Simulamos fallas dentro de la funci\u00f3n de lectura de bh. Esto requiere agregar un par\u00e1metro adicional a las funciones de lectura de bh que necesitan la inyecci\u00f3n de fallas."
    }
  ],
  "metrics": {},
  "references": [
    {
      "url": "https://git.kernel.org/stable/c/25a5acf88fed59e060405bbb48098f4a3a2c2adc",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/2f3d93e210b9c2866c8b3662adae427d5bf511ec",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/61832ee7fa2fbd569d129379e795038abfb0d128",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/77035e4d27e15f87ea55929c8bb8fb1970129e2f",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    }
  ]
}